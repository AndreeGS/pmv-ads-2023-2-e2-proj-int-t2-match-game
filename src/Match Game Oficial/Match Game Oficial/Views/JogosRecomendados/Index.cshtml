<link rel="stylesheet" href="~/css/ListarJogos.css" asp-append-version="true" />

@using System.Text.Json;


@{
    ViewData["Title"] = "Recomendados";
    
}

<div id="js-preloader" class="js-preloader loaded">

    <div class="preloader-inner">

        <span class="dot"></span>
        <div class="dots">
            <span></span>
            <span></span>
            <span></span>

        </div>

    </div>


</div>

<dialog id="gameModal">
    <div class="conteudo ms-3 me-3">
        <h1 class="text-center" style="font-family: 'Jost'; font-weight: 700; color: #6014EC; font-size: 1.8em; margin-top: 2%">
            INFORMAÇÕES
        </h1>

        <div class="secao">
            <h4 class="me-2">Plataformas compatíveis:</h4>
            <p id="platforms"></p>
        </div>

        <div class="secao">
            <h4 class="me-2">Avaliações:</h4>
            <p id="rating"></p>
        </div>

        <div class="secao">
            <h4 class="me-2">Data de Lançamento:</h4>
            <p id="released"></p>
        </div>


        <div class="text-center">
            <button onclick="fecharModal()" class="btnFechar">FECHAR</button>
        </div>

    </div>
</dialog>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="most-popular">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="heading-section">
                            <h4 class="text-center">JOGOS RECOMENDADOS PARA VOCÊ</h4>
                            <p class="text-center">Confira abaixo a lista dos jogos que foram recomendados para você.</p>

                        </div>
                        <div class="row gameList">
                        </div>

                        <div class="col-lg-12">
                            <div class="main-button">
                                <a href="javascript:void(0)">Mais Jogos</a>

                            </div>


                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    $(document).ready(function () {
        $.ajax({
            url: "@Url.Action("MeusJogos", "JogosRecomendados")",
            type: "POST",
            success: function (data) {

                console.log(data);


                if (data && data.recomendaddo) {

                    console.log(data.recomendaddo)
                    /*
                    var dataString = JSON.stringify(data.recomendaddo);

                    console.log("Recomendado: " + dataString);
                    */
                    var storeUrl = data.recomendaddo;

                    console.log("Recomendado:", storeUrl);
                    console.log("Tipo de data.UsuarioLink:", typeof storeUrl);


                    const APIKEY = "69f74f8a6cde46529c5d0923786cdab7";
                    const loaderEl = document.getElementById("js-preloader");
                    const gameList = document.querySelector(".gameList");
                    const loadMoreGamesBtn = document.querySelector(".main-button");
                    let nextGameListUrl = null;


                    if (storeUrl) 
                    {
                        const urlgame = storeUrl;

                        const getPlatformStr = (platforms) => {
                            if (Array.isArray(platforms)) {
                                return platforms.map(each => each.platform.name).join(",");
                            }
                            return platforms;
                        };



                        function loadGames(urlgame) {
                            loaderEl.classList.remove("loaded");

                            fetch(urlgame)
                                .then(response => response.json())
                                .then(data => {
                                    nextGameListUrl = data.next ? data.next : null;
                                    const games = data.results;
                                    loaderEl.classList.add("loaded");

                                    games.forEach(game => {
                                        const gameItemEl =
                                        `<div class="col-lg-3 col-md-6 col-sm-12">
                                                <div class="item position-relative card">
                                                    <div class="gameImg">
                                                        <img src="${game.background_image}" alt="${game.name} image" style="width: 100%;">
                                                    </div>

                                                    <div id="favoritos">
                                                        <i id="favIcon" class="fa-regular fa-heart favoritos position-absolute top-90 end-0 b-24 favorite-button" style="color: #8952ff;" title="Favorito"></i>
                                                    </div>

                                                    <h4 class="game-name " >${game.name}<br>
                                                        <span class="platforms">${getPlatformStr(game.parent_platforms)}</span>
                                                    </h4>

                                                    <div class="info">
                                                        <ul class="list-unstyled infoGeral">
                                                            <li><i class="fa fa-star" style="color: #ffc800;"></i> <span class="rating">${game.rating}</span></li>
                                                            <li><i class="fa-regular fa-calendar" style="color: #ffc800;"></i> <span class="date">${game.released}</span></li>
                                                        </ul>
                                                    </div>
                                                    <div class="text-center saibaMaisBtn">
                                                         <button class="btn btnSaibaMais">SAIBA MAIS</button>
                                                    </div>
                                            </div>
                                        </div>
                                        `;
                                        gameList.insertAdjacentHTML("beforeend", gameItemEl);
                                    });

                                    if (nextGameListUrl) {
                                        loadMoreGamesBtn.classList.remove("hidden");
                                    } else {
                                        loadMoreGamesBtn.classList.add("hidden");
                                    }
                                })
                                .catch(error => {
                                    console.log("Ocorreu algum erro", error);
                                });
                        }

                        loadGames(urlgame);

                        loadMoreGamesBtn.addEventListener('click', () => {
                            if (nextGameListUrl) {
                                loadGames(nextGameListUrl);
                            }
                        });
                    }

                }
                else{
                    console.log("está faltando")
                }
            },
            error: function () {
                console.error("Erro ao chamar ação MeusJogos");
            }
        });
    });

  
   
</script>

<script>

    var userName = "@User.Identity.Name";

    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('favorite-button')) {
            // Verificar se o usuário está logado antes de prosseguir
            if (!userName) {
                alert("Por favor, faça login para favoritar jogos.");
                return; // Impede a execução do restante do código
            }

            const gameContainer = event.target.closest('.item');
            const gameName = gameContainer.querySelector('.game-name').textContent;

            // Função para verificar se o jogo já está favoritado
            function isGameAlreadyFavorited(gameName, userName) {
                const favoritosKey = `favoritos_${userName}`;
                let favoriteGamesList = JSON.parse(localStorage.getItem(favoritosKey)) || [];
                return favoriteGamesList.some(game => game.name === gameName);
            }

            // Verificar se o jogo já está na lista de favoritos
            if (isGameAlreadyFavorited(gameName, userName)) {
                alert(`${gameName} já foi favoritado`);
                return;
            }
            alert(`${gameName} foi adicionado à lista de favoritos!`);

            const gameRating = gameContainer.querySelector('.rating').textContent;
            const gameReleased = gameContainer.querySelector('.date').textContent;

            const favoriteGame = {
                name: event.target.parentNode.querySelector('.game-name').textContent,
                released: event.target.parentNode.querySelector('.date').textContent,
                rating: event.target.parentNode.querySelector('.rating').textContent,
                background_image: event.target.parentNode.querySelector('img').src,
                parent_platforms: event.target.parentNode.querySelector('.platforms').textContent,
            };

            const favoritosKey = `favoritos_${userName}`;

            let favoriteGamesList = JSON.parse(localStorage.getItem(favoritosKey)) || [];
            favoriteGamesList.push(favoriteGame);
            localStorage.setItem(favoritosKey, JSON.stringify(favoriteGamesList));
        }
    });
</script>

<script>
    // Modal
    document.addEventListener('DOMContentLoaded', function () {

        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('btnSaibaMais')) {
                const gameId = e.target.closest('.item').dataset.gameId;
                abrirModal(gameId);
            }
        });

        function abrirModal(gameId) {
            const modal = document.getElementById('gameModal');

            // Puxando dados do jogo da API usando o gameId
            const apiUrl = `https://api.rawg.io/api/games/${gameId}?key=69f74f8a6cde46529c5d0923786cdab7`;

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    // Atualização com os dados do jogo
                    document.getElementById('platforms').textContent = `${getPlatformStr(data.platforms)}`;
                    document.getElementById('rating').textContent = `${data.rating}`;
                    document.getElementById('released').textContent = `${data.released}`;
                })
                .catch(error => {
                    console.log("Ocorreu algum erro ao carregar dados do jogo", error);
                });

            modal.showModal();

            // Evento para fechar o modal
            modal.querySelector('button').addEventListener('click', fecharModal);
        }

        // Função para fechar o modal
        function fecharModal() {
            const modal = document.getElementById('gameModal');
            modal.close();
        }
    });
</script>

<script src="https://kit.fontawesome.com/fe8eb85698.js" crossorigin="anonymous"></script>